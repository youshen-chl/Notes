Linux系统有两种init方式：一种是广为流传的System V initialization; 另一种是最近几年提出的Upstart方式，基于事件机制，系统的所有服务和任务都是事件驱动的。ubuntu(6.10)以后采用的是Upstart机制。

对于Upstart而言/etc/init目录(有的可能是/etc/event.d)是关键，里面全是配置文件，通过这些配置文件就可以设置相应的作业程序何时启动/停止。

Upstart启动过程：
  Kernel Init(内核启动第一个进程，即Upstart init进程)
    --> startup(Upstart进程进行一些初始化后，发出startup事件)
    --> mountall.conf 
       	    --> emits virtual-filesystems
		--> udev.conf
		emits local-filesystems
		emits remote-filesystems
		emits all-swaps
	|-------emits filesystem
	|       emits mounting
	|       emits mounted
	|       --> container-detect.conf (start on mounted MOUNTPOINT=/run) **(emits container)
	|         --> network-interface-container.conf (emits net-device-added)
	|-------    --> network-interface.conf (emits static-network-up)
	|       
	|       
	|---------> rc-sysinit.conf [start on (filesystem and static-network-up) or failsafe-boot]
		      --> telinit "${DEFAULT_RUNLEVEL}" [ 发出runlevel事件，触发/etc/init/rc.conf]
			--> rc.conf [/etc/init.d/rc $RUNLEVEL, 会去rcN.d目录下执行所有脚本]
    --> udevmonitor.conf       
    --> kmod.conf
    --> hostname.conf
    --> udevtrigger.conf
	(这些Job Configuration File文件在/etc/init/目录里面，它们均依赖于startup事件触发)

  1. 系统上电后，由Grub加载内核Kernel,内核在完成初始化后会执行第一个进程init,即Upstart init进程。
  2. Upstart init在进行自身的一些初始化后，会发出startup事件。
  3. startup事件会触发mountall等一些作业(/etc/init目录下的作业配置文件中包含start on startup语句的作业)。
  4. 在mountall作业中会发射virtual-filesystems、local-filesystems、remote-filesystems、all-swaps、filesystem、mounting、mounted事件。
  5. 其中mounted事件会触发container-detect作业，从而发出container事件去触发network-interface-container作业，其又发出net-device-added事件去触发network-interface作业，进而发出static-network-up事件，static-network-up事件和filesystem事件一起去触发rc-sysinit作业，rc-sysinit最后会调用telinit "$[DEFAULT_RUNLEVEL]"去改变运行等级，从而发出runlevel事件触发rc作业，在/etc/init/rc.conf中会调用/etc/init.d/rc $RUNLEVEL。
  6. 会去/etc/rcN.d目录下执行所有脚本。

-----------------------------------------------------------------------------------------------------------------
使用Upstart的系统初始化过程是由Job和Event相互协助完成的，这个文件是一个文本文件，包含一个或者多个小节（stanza）。每个小节是一个完整的定义模块，定义了作业的一个方面。 

其中比较重要的小节有以下几个：
 1. "author" Stanza 、 "description" Stanza
 2. "expect" Stanza。expect 有两种，"expect fork"表示进程只会 fork 一次；"expect daemonize"表示进程会 fork 两次。
 3. "exec" Stanza 和 "script" Stanza。告诉一个Upstat作业执行的命令：用"exec"关键字配置作业需要运行的命令；用"script"关键字定义需要运行的脚本。注意"exec"可以嵌入到"script"中。
 4. "start on" 和 "stop on" Stanza. "start on"定义了触发作业的所有事件,语法很简单:start on EVENT [[KEY=]VALUE]... [and|or...]。  KEY=VALUE 来表示额外的条件，一般是某个环境变量(KEY)和特定值(VALUE)进行比较。"stop on"类似。
 5. respawn                            //意外关闭重启服务
    normal exit 0                      //列出normal exit的代码或者信号，正常退出不重启
*************************************************
例子
 rc-sysinit - System V initialisation compatibility
#
# This task runs the old System V-style system initialisation scripts,
# and enters the default runlevel when finished.

description     "System V initialisation compatibility"
author          "Scott James Remnant <scott@netsplit.com>"

start on (filesystem and static-network-up) or failsafe-boot
stop on runlevel

# Default runlevel, this may be overriden on the kernel command-line
# or by faking an old /etc/inittab entry
env DEFAULT_RUNLEVEL=2

emits runlevel    //发出runlevel事件

# There can be no previous runlevel here, but there might be old
# information in /var/run/utmp that we pick up, and we don't want
# that.
#
# These override that
env RUNLEVEL=    //变量
env PREVLEVEL=

console output      //指定console终端为输出
env INIT_VERBOSE

task		//指定作业为 任务

script
    # Check for default runlevel in /etc/inittab
    if [ -r /etc/inittab ]
    then
        eval "$(sed -nre 's/^[^#][^:]*:([0-6sS]):initdefault:.*/DEFAULT_RUNLEVEL="\1";/p' /etc/inittab || true)"
    fi

    # Check kernel command-line for typical arguments
    for ARG in $(cat /proc/cmdline)
    do
        case "${ARG}" in
        -b|emergency)
            # Emergency shell
            [ -n "${FROM_SINGLE_USER_MODE}" ] || sulogin
            ;;
        [0123456sS])
            # Override runlevel
            DEFAULT_RUNLEVEL="${ARG}"
            ;;
        -s|single)
            # Single user mode
            [ -n "${FROM_SINGLE_USER_MODE}" ] || DEFAULT_RUNLEVEL=S
            ;;
        esac
    done

    # Run the system initialisation scripts
    [ -n "${FROM_SINGLE_USER_MODE}" ] || /etc/init.d/rcS

    # Switch into the default runlevel
    telinit "${DEFAULT_RUNLEVEL}"
end script
            
*************************************************

Upstart 中 Job 的可能状态
-------------------------------------------------------------
Waiting 	初始状态
Starting 	Job 即将开始
pre-start 	执行 pre-start 段，即任务开始前应该完成的作业
Spawned 	准备执行 script 或者 exec 段
post-start 	执行 post-start 动作
Running 	interim state set after post-start section processed denoting job is running (But it may have no associated PID!)
pre-stop 	执行 pre-stop 段
Stopping 	interim state set after pre-stop section processed
Killed 		任务即将被停止
post-stop 	执行 post-stop 段 
-------------------------------------------------------------



